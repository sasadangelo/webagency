version: '2.1'

volumes:
    mysql_volume:
      name: mysql_volume
    wordpress_volume:
      name: wordpress_volume

services:
  mysql:
    container_name: mysql
    image: mysql:${MYSQL_VERSION:-latest}
    volumes:
      - mysql_volume:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${MYSQL_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    restart: always
    networks:
      - webagency-net

  wordpress:
    depends_on:
      - mysql
      - nginx-proxy
    container_name: wordpress
    image: wordpress:${WORDPRESS_VERSION:-latest}
    ports:
      - 8080:80
    volumes:
      - wordpress_volume:/var/www/html
    links:
      - mysql:mysql
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_CONFIG_EXTRA: |
        #define('FS_METHOD', 'direct');
        define('WP_MEMORY_LIMIT', '3M');
        #define('WP_DEBUG', 'true');
        #define('WP_HTTP_BLOCK_EXTERNAL', false);
        #define('WP_ACCESSIBLE_HOSTS', 'api.wordpress.org');
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - webagency-net

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    environment:
      - DEFAULT_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PROTO=uwsgi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - webagency-net


  wordpress-cli:
    depends_on:
      mysql:
          condition: service_healthy
      wordpress:
          condition: service_healthy
      nginx-proxy:
          condition: service_healthy
    container_name: wordpress-cli
    image: wordpress:cli-${WORDPRESS_CLI_VERSION}
    user: xfs
    environment:
      - HOME=/tmp
    volumes:
      - wordpress_volume:/var/www/html
      - ./configure_wp.sh:/configure_wp.sh
      - ./.env:/.env
      - ./options:/options
    links:
      - mysql:mysql
    command: "/configure_wp.sh"
    dns:
      - 8.8.8.8
    networks:
      - webagency-net

networks:
  webagency-net:
    name: webagency-net
    driver: bridge
